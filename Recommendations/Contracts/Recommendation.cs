// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Recommendation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from Recommendation.proto</summary>
public static partial class RecommendationReflection {

  #region Descriptor
  /// <summary>File descriptor for Recommendation.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static RecommendationReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChRSZWNvbW1lbmRhdGlvbi5wcm90bxoMTWV0cmljLnByb3RvIp0BCg5SZWNv",
          "bW1lbmRhdGlvbhIKCgJpZBgBIAEoCRIfCg5tZXRyaWNfY29udHJvbBgCIAEo",
          "CzIHLk1ldHJpYxIhChBtZXRyaWNfdHJlYXRtZW50GAMgASgLMgcuTWV0cmlj",
          "EhMKC2F2Z19jb250cm9sGAQgASgBEhUKDWF2Z190cmVhdG1lbnQYBSABKAES",
          "DwoHcF92YWx1ZRgGIAEoAWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::MetricReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::Recommendation), global::Recommendation.Parser, new[]{ "Id", "MetricControl", "MetricTreatment", "AvgControl", "AvgTreatment", "PValue" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class Recommendation : pb::IMessage<Recommendation>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Recommendation> _parser = new pb::MessageParser<Recommendation>(() => new Recommendation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Recommendation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RecommendationReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Recommendation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Recommendation(Recommendation other) : this() {
    id_ = other.id_;
    metricControl_ = other.metricControl_ != null ? other.metricControl_.Clone() : null;
    metricTreatment_ = other.metricTreatment_ != null ? other.metricTreatment_.Clone() : null;
    avgControl_ = other.avgControl_;
    avgTreatment_ = other.avgTreatment_;
    pValue_ = other.pValue_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Recommendation Clone() {
    return new Recommendation(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private string id_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Id {
    get { return id_; }
    set {
      id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "metric_control" field.</summary>
  public const int MetricControlFieldNumber = 2;
  private global::Metric metricControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Metric MetricControl {
    get { return metricControl_; }
    set {
      metricControl_ = value;
    }
  }

  /// <summary>Field number for the "metric_treatment" field.</summary>
  public const int MetricTreatmentFieldNumber = 3;
  private global::Metric metricTreatment_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Metric MetricTreatment {
    get { return metricTreatment_; }
    set {
      metricTreatment_ = value;
    }
  }

  /// <summary>Field number for the "avg_control" field.</summary>
  public const int AvgControlFieldNumber = 4;
  private double avgControl_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double AvgControl {
    get { return avgControl_; }
    set {
      avgControl_ = value;
    }
  }

  /// <summary>Field number for the "avg_treatment" field.</summary>
  public const int AvgTreatmentFieldNumber = 5;
  private double avgTreatment_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double AvgTreatment {
    get { return avgTreatment_; }
    set {
      avgTreatment_ = value;
    }
  }

  /// <summary>Field number for the "p_value" field.</summary>
  public const int PValueFieldNumber = 6;
  private double pValue_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double PValue {
    get { return pValue_; }
    set {
      pValue_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Recommendation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Recommendation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (!object.Equals(MetricControl, other.MetricControl)) return false;
    if (!object.Equals(MetricTreatment, other.MetricTreatment)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgControl, other.AvgControl)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(AvgTreatment, other.AvgTreatment)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PValue, other.PValue)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Id.Length != 0) hash ^= Id.GetHashCode();
    if (metricControl_ != null) hash ^= MetricControl.GetHashCode();
    if (metricTreatment_ != null) hash ^= MetricTreatment.GetHashCode();
    if (AvgControl != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgControl);
    if (AvgTreatment != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(AvgTreatment);
    if (PValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PValue);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (metricControl_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(MetricControl);
    }
    if (metricTreatment_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(MetricTreatment);
    }
    if (AvgControl != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(AvgControl);
    }
    if (AvgTreatment != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(AvgTreatment);
    }
    if (PValue != 0D) {
      output.WriteRawTag(49);
      output.WriteDouble(PValue);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Id.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Id);
    }
    if (metricControl_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(MetricControl);
    }
    if (metricTreatment_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(MetricTreatment);
    }
    if (AvgControl != 0D) {
      output.WriteRawTag(33);
      output.WriteDouble(AvgControl);
    }
    if (AvgTreatment != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(AvgTreatment);
    }
    if (PValue != 0D) {
      output.WriteRawTag(49);
      output.WriteDouble(PValue);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Id.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
    }
    if (metricControl_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetricControl);
    }
    if (metricTreatment_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetricTreatment);
    }
    if (AvgControl != 0D) {
      size += 1 + 8;
    }
    if (AvgTreatment != 0D) {
      size += 1 + 8;
    }
    if (PValue != 0D) {
      size += 1 + 8;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Recommendation other) {
    if (other == null) {
      return;
    }
    if (other.Id.Length != 0) {
      Id = other.Id;
    }
    if (other.metricControl_ != null) {
      if (metricControl_ == null) {
        MetricControl = new global::Metric();
      }
      MetricControl.MergeFrom(other.MetricControl);
    }
    if (other.metricTreatment_ != null) {
      if (metricTreatment_ == null) {
        MetricTreatment = new global::Metric();
      }
      MetricTreatment.MergeFrom(other.MetricTreatment);
    }
    if (other.AvgControl != 0D) {
      AvgControl = other.AvgControl;
    }
    if (other.AvgTreatment != 0D) {
      AvgTreatment = other.AvgTreatment;
    }
    if (other.PValue != 0D) {
      PValue = other.PValue;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          if (metricControl_ == null) {
            MetricControl = new global::Metric();
          }
          input.ReadMessage(MetricControl);
          break;
        }
        case 26: {
          if (metricTreatment_ == null) {
            MetricTreatment = new global::Metric();
          }
          input.ReadMessage(MetricTreatment);
          break;
        }
        case 33: {
          AvgControl = input.ReadDouble();
          break;
        }
        case 41: {
          AvgTreatment = input.ReadDouble();
          break;
        }
        case 49: {
          PValue = input.ReadDouble();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Id = input.ReadString();
          break;
        }
        case 18: {
          if (metricControl_ == null) {
            MetricControl = new global::Metric();
          }
          input.ReadMessage(MetricControl);
          break;
        }
        case 26: {
          if (metricTreatment_ == null) {
            MetricTreatment = new global::Metric();
          }
          input.ReadMessage(MetricTreatment);
          break;
        }
        case 33: {
          AvgControl = input.ReadDouble();
          break;
        }
        case 41: {
          AvgTreatment = input.ReadDouble();
          break;
        }
        case 49: {
          PValue = input.ReadDouble();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
